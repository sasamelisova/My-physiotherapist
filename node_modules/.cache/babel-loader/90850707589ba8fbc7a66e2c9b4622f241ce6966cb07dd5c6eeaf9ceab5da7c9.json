{"ast":null,"code":"var _jsxFileName = \"/Users/v450/myphysiotherapist/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [exercises, setExercises] = useState([]);\n  const [completedSessions, setCompletedSessions] = useState(0);\n  useEffect(() => {\n    if (user) {\n      // Fetch exercise data based on user's pain area and intensity\n      // This is a placeholder for your actual data fetching logic\n      const fetchedExercises = [{\n        name: \"Exercise 1\",\n        reps: \"9-12\",\n        image: \"/path/to/image1.jpg\"\n      }, {\n        name: \"Exercise 2\",\n        reps: \"9-12\",\n        image: \"/path/to/image2.jpg\"\n      }, {\n        name: \"Exercise 3\",\n        reps: \"9-12\",\n        image: \"/path/to/image3.jpg\"\n      }];\n      setExercises(fetchedExercises);\n    }\n  }, [user]);\n  const finishSession = () => {\n    setCompletedSessions(completedSessions + 1);\n    // Logic to save the session data to history\n  };\n  if (!user) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Please log in to see this page.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Today's Therapy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: new Date().toLocaleDateString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), exercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: exercise.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: exercise.image,\n        alt: exercise.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Repetitions: \", exercise.reps]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: finishSession,\n      children: \"Finish Therapy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"cQhoIEYZCbit7eCfLyWcRtp9KAs=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useContext","useEffect","useState","AuthContext","jsxDEV","_jsxDEV","Dashboard","_s","user","exercises","setExercises","completedSessions","setCompletedSessions","fetchedExercises","name","reps","image","finishSession","children","fileName","_jsxFileName","lineNumber","columnNumber","Date","toLocaleDateString","map","exercise","index","src","alt","onClick","_c","$RefreshReg$"],"sources":["/Users/v450/myphysiotherapist/src/components/Dashboard.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { AuthContext } from '../context/AuthContext';\n\nconst Dashboard = () => {\n    const { user } = useContext(AuthContext);\n    const [exercises, setExercises] = useState([]);\n    const [completedSessions, setCompletedSessions] = useState(0);\n\n    useEffect(() => {\n        if (user) {\n            // Fetch exercise data based on user's pain area and intensity\n            // This is a placeholder for your actual data fetching logic\n            const fetchedExercises = [\n                { name: \"Exercise 1\", reps: \"9-12\", image: \"/path/to/image1.jpg\" },\n                { name: \"Exercise 2\", reps: \"9-12\", image: \"/path/to/image2.jpg\" },\n                { name: \"Exercise 3\", reps: \"9-12\", image: \"/path/to/image3.jpg\" }\n            ];\n            setExercises(fetchedExercises);\n        }\n    }, [user]);\n\n    const finishSession = () => {\n        setCompletedSessions(completedSessions + 1);\n        // Logic to save the session data to history\n    };\n\n    if (!user) return <p>Please log in to see this page.</p>;\n\n    return (\n        <div>\n            <h1>Today's Therapy</h1>\n            <p>{new Date().toLocaleDateString()}</p>\n            {exercises.map((exercise, index) => (\n                <div key={index}>\n                    <h3>{exercise.name}</h3>\n                    <img src={exercise.image} alt={exercise.name} />\n                    <p>Repetitions: {exercise.reps}</p>\n                </div>\n            ))}\n            <button onClick={finishSession}>Finish Therapy</button>\n        </div>\n    );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}