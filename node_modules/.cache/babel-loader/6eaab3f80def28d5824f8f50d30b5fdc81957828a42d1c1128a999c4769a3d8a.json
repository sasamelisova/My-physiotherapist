{"ast":null,"code":"var _jsxFileName = \"/Users/v450/myphysiotherapist/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const exercises = {\n    kneePain: [{\n      name: \"Straight Leg Raise\",\n      description: \"Lie on your back, one leg bent and the other straight. Raise the straight leg slightly off the floor. Hold and then lower it back down.\"\n    }, {\n      name: \"Quad Set\",\n      description: \"Sit with your leg straight and tighten the muscle on the top of your thigh. Hold the contraction before releasing.\"\n    }, {\n      name: \"Hamstring Curl\",\n      description: \"Stand and bend one knee as if trying to kick your buttock with the heel. Hold and then return to the starting position.\"\n    }, {\n      name: \"Prone Straight Leg Raises\",\n      description: \"Lie on your stomach with your legs straight. Lift one leg off the ground, hold it, and then lower it back down.\"\n    }, {\n      name: \"Wall Squat\",\n      description: \"Stand with your back against a wall, feet shoulder-width apart. Slowly bend your knees, sliding down the wall, then straighten up.\"\n    }, {\n      name: \"Step-Ups\",\n      description: \"Step up on a platform or stair, then step down with the same leg. Alternate your leading leg with each set.\"\n    }, {\n      name: \"Calf Raises\",\n      description: \"Stand upright, then push through the balls of your feet to raise your heel until you are standing on your toes. Lower slowly back to the start.\"\n    }, {\n      name: \"Leg Press\",\n      description: \"Sit on a leg press machine with your feet on the platform. Extend your legs until they are straight, then return to the starting position.\"\n    }, {\n      name: \"Walking Lunge\",\n      description: \"Step forward with one leg, lowering your hips until both knees are bent at a 90-degree angle. Push up and step forward with your other leg.\"\n    }, {\n      name: \"Bicycle Exercise\",\n      description: \"Lie on your back and mimic a bicycle pedaling motion with your legs in the air, engaging your abdominal muscles.\"\n    }],\n    shoulderPain: [\n      // List of shoulder pain exercises\n    ],\n    backPain: [\n      // List of back pain exercises\n    ]\n  };\n  const [userData, setUserData] = useState({\n    painIntensity: '',\n    painLocation: ''\n  });\n  const [selectedExercises, setSelectedExercises] = useState([]);\n  const [finishedTherapies, setFinishedTherapies] = useState(0);\n  const [therapyHistory, setTherapyHistory] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n    const username = localStorage.getItem('username');\n    const token = localStorage.getItem('token');\n    const fetchUserData = async () => {\n      try {\n        const response = await axios.get(`${baseURL}/user/${username}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setUserData(response.data);\n        const randomExercises = getRandomExercises(response.data.painLocation);\n        setSelectedExercises(randomExercises);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n        setError('Failed to fetch user data. Please try again.');\n        setLoading(false);\n      }\n    };\n    fetchUserData();\n  }, []);\n  const getRandomExercises = painLocation => {\n    const painType = painLocation + 'Pain';\n    const availableExercises = exercises[painType];\n    let selected = [];\n    while (selected.length < 3) {\n      const randomIndex = Math.floor(Math.random() * availableExercises.length);\n      const exercise = availableExercises[randomIndex];\n      if (!selected.some(e => e.name === exercise.name)) {\n        selected.push(exercise);\n      }\n    }\n    return selected;\n  };\n  const handleFinishTherapy = () => {\n    setFinishedTherapies(finishedTherapies + 1);\n    const today = new Date().toLocaleDateString();\n    const todayExercises = selectedExercises.map(ex => ({\n      date: today,\n      name: ex.name,\n      description: ex.description\n    }));\n    setTherapyHistory([...therapyHistory, ...todayExercises]);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Today's Therapy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Date: \", new Date().toLocaleDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Pain Intensity: \", userData.painIntensity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Pain Location: \", userData.painLocation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Finished Therapies: \", finishedTherapies]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recommended Exercises\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedExercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: exercise.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }, this), \": \", exercise.description]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFinishTherapy,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Therapy History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: therapyHistory.map((history, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [history.date, \" - \", history.name, \": \", history.description]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"4dQxIjjxN8++uI3fJ1tE7Qw7y8g=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","exercises","kneePain","name","description","shoulderPain","backPain","userData","setUserData","painIntensity","painLocation","selectedExercises","setSelectedExercises","finishedTherapies","setFinishedTherapies","therapyHistory","setTherapyHistory","error","setError","loading","setLoading","baseURL","process","env","REACT_APP_API_URL","username","localStorage","getItem","token","fetchUserData","response","get","headers","Authorization","data","randomExercises","getRandomExercises","console","painType","availableExercises","selected","length","randomIndex","Math","floor","random","exercise","some","e","push","handleFinishTherapy","today","Date","toLocaleDateString","todayExercises","map","ex","date","children","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","history","_c","$RefreshReg$"],"sources":["/Users/v450/myphysiotherapist/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Dashboard = () => {\n    const exercises = {\n        kneePain: [\n            { name: \"Straight Leg Raise\", description: \"Lie on your back, one leg bent and the other straight. Raise the straight leg slightly off the floor. Hold and then lower it back down.\" },\n            { name: \"Quad Set\", description: \"Sit with your leg straight and tighten the muscle on the top of your thigh. Hold the contraction before releasing.\" },\n            { name: \"Hamstring Curl\", description: \"Stand and bend one knee as if trying to kick your buttock with the heel. Hold and then return to the starting position.\" },\n            { name: \"Prone Straight Leg Raises\", description: \"Lie on your stomach with your legs straight. Lift one leg off the ground, hold it, and then lower it back down.\" },\n            { name: \"Wall Squat\", description: \"Stand with your back against a wall, feet shoulder-width apart. Slowly bend your knees, sliding down the wall, then straighten up.\" },\n            { name: \"Step-Ups\", description: \"Step up on a platform or stair, then step down with the same leg. Alternate your leading leg with each set.\" },\n            { name: \"Calf Raises\", description: \"Stand upright, then push through the balls of your feet to raise your heel until you are standing on your toes. Lower slowly back to the start.\" },\n            { name: \"Leg Press\", description: \"Sit on a leg press machine with your feet on the platform. Extend your legs until they are straight, then return to the starting position.\" },\n            { name: \"Walking Lunge\", description: \"Step forward with one leg, lowering your hips until both knees are bent at a 90-degree angle. Push up and step forward with your other leg.\" },\n            { name: \"Bicycle Exercise\", description: \"Lie on your back and mimic a bicycle pedaling motion with your legs in the air, engaging your abdominal muscles.\" }\n        ],\n        shoulderPain: [\n            // List of shoulder pain exercises\n        ],\n        backPain: [\n            // List of back pain exercises\n        ]\n    };\n\n    const [userData, setUserData] = useState({\n        painIntensity: '',\n        painLocation: ''\n    });\n    const [selectedExercises, setSelectedExercises] = useState([]);\n    const [finishedTherapies, setFinishedTherapies] = useState(0);\n    const [therapyHistory, setTherapyHistory] = useState([]);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n        const username = localStorage.getItem('username');\n        const token = localStorage.getItem('token');\n\n        const fetchUserData = async () => {\n            try {\n                const response = await axios.get(`${baseURL}/user/${username}`, {\n                    headers: {\n                        Authorization: `Bearer ${token}`\n                    }\n                });\n                setUserData(response.data);\n                const randomExercises = getRandomExercises(response.data.painLocation);\n                setSelectedExercises(randomExercises);\n                setLoading(false);\n            } catch (error) {\n                console.error('Error fetching user data:', error);\n                setError('Failed to fetch user data. Please try again.');\n                setLoading(false);\n            }\n        };\n\n        fetchUserData();\n    }, []);\n\n    const getRandomExercises = (painLocation) => {\n        const painType = painLocation + 'Pain';\n        const availableExercises = exercises[painType];\n        let selected = [];\n        while (selected.length < 3) {\n            const randomIndex = Math.floor(Math.random() * availableExercises.length);\n            const exercise = availableExercises[randomIndex];\n            if (!selected.some(e => e.name === exercise.name)) {\n                selected.push(exercise);\n            }\n        }\n        return selected;\n    };\n\n    const handleFinishTherapy = () => {\n        setFinishedTherapies(finishedTherapies + 1);\n        const today = new Date().toLocaleDateString();\n        const todayExercises = selectedExercises.map(ex => ({\n            date: today,\n            name: ex.name,\n            description: ex.description\n        }));\n        setTherapyHistory([...therapyHistory, ...todayExercises]);\n    };\n\n    if (loading) {\n        return <p>Loading...</p>;\n    }\n\n    return (\n        <div>\n            <h1>Today's Therapy</h1>\n            <p>Date: {new Date().toLocaleDateString()}</p>\n            {error ? (\n                <p>{error}</p>\n            ) : (\n                <>\n                    <p>Pain Intensity: {userData.painIntensity}</p>\n                    <p>Pain Location: {userData.painLocation}</p>\n                    <p>Finished Therapies: {finishedTherapies}</p>\n                    <h2>Recommended Exercises</h2>\n                    <ul>\n                        {selectedExercises.map((exercise, index) => (\n                            <li key={index}>\n                                <strong>{exercise.name}</strong>: {exercise.description}\n                            </li>\n                        ))}\n                    </ul>\n                    <button onClick={handleFinishTherapy}>Done</button>\n                    \n                    <h3>Therapy History</h3>\n                    <ul>\n                        {therapyHistory.map((history, index) => (\n                            <li key={index}>{history.date} - {history.name}: {history.description}</li>\n                        ))}\n                    </ul>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default Dashboard;\n\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}