{"ast":null,"code":"var _jsxFileName = \"/Users/v450/myphysiotherapist/src/Frontend/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const exercises = {\n    kneePain: [{\n      name: \"Straight Leg Raise\",\n      description: \"Lie on your back, one leg bent and the other straight. Raise the straight leg slightly off the floor. Hold and then lower it back down.\"\n    }, {\n      name: \"Quad Set\",\n      description: \"Sit with your leg straight and tighten the muscle on the top of your thigh. Hold the contraction before releasing.\"\n    }, {\n      name: \"Hamstring Curl\",\n      description: \"Stand and bend one knee as if trying to kick your buttock with the heel. Hold and then return to the starting position.\"\n    }, {\n      name: \"Prone Straight Leg Raises\",\n      description: \"Lie on your stomach with your legs straight. Lift one leg off the ground, hold it, and then lower it back down.\"\n    }, {\n      name: \"Wall Squat\",\n      description: \"Stand with your back against a wall, feet shoulder-width apart. Slowly bend your knees, sliding down the wall, then straighten up.\"\n    }, {\n      name: \"Step-Ups\",\n      description: \"Step up on a platform or stair, then step down with the same leg. Alternate your leading leg with each set.\"\n    }, {\n      name: \"Calf Raises\",\n      description: \"Stand upright, then push through the balls of your feet to raise your heel until you are standing on your toes. Lower slowly back to the start.\"\n    }, {\n      name: \"Leg Press\",\n      description: \"Sit on a leg press machine with your feet on the platform. Extend your legs until they are straight, then return to the starting position.\"\n    }, {\n      name: \"Walking Lunge\",\n      description: \"Step forward with one leg, lowering your hips until both knees are bent at a 90-degree angle. Push up and step forward with your other leg.\"\n    }, {\n      name: \"Bicycle Exercise\",\n      description: \"Lie on your back and mimic a bicycle pedaling motion with your legs in the air, engaging your abdominal muscles.\"\n    }],\n    shoulderPain: [{\n      name: \"Pendulum Stretch\",\n      description: \"Lean over slightly and let your affected arm hang down. Swing the arm gently in circles clockwise and counterclockwise.\"\n    }, {\n      name: \"Towel Stretch\",\n      description: \"Hold a towel behind your back with one hand, and grab the opposite end with your other hand. Pull the towel up and down gently.\"\n    }, {\n      name: \"Outward Rotation\",\n      description: \"Hold a band between your hands with your elbows at your side, rotated outward against the band’s resistance.\"\n    }, {\n      name: \"Inward Rotation\",\n      description: \"Hold a band between your hands with your elbows at your side, rotate inward against the band’s resistance.\"\n    }, {\n      name: \"Reverse Fly\",\n      description: \"Bend forward slightly and, with a dumbbell in each hand, lift your arms to the side until they are parallel with the ground.\"\n    }, {\n      name: \"Shoulder Blade Squeeze\",\n      description: \"Sit or stand with your arms at your sides. Squeeze your shoulder blades together and hold for a few seconds before releasing.\"\n    }, {\n      name: \"Standing Wall Stretch\",\n      description: \"Face a wall and stretch your arms up to touch the wall, holding the position to stretch your shoulders.\"\n    }, {\n      name: \"Diagonal Extension\",\n      description: \"Hold a band with both hands, stretch your arms out and up in a diagonal pattern, and then return to the starting position.\"\n    }, {\n      name: \"Seated Rotation\",\n      description: \"Sit with your arm at a right angle and rotated outward, hold for a few seconds, and then switch arms.\"\n    }, {\n      name: \"Arm Circles\",\n      description: \"Extend your arms parallel to the ground and make small circles, gradually increasing the diameter of the circles.\"\n    }],\n    backPain: [{\n      name: \"Cat-Cow Stretch\",\n      description: \"Get on your hands and knees. Arch your back towards the ceiling and hold, then dip it towards the floor and hold.\"\n    }, {\n      name: \"Child’s Pose\",\n      description: \"Sit back on your heels with your hands stretched forward on the floor. Hold this position to stretch your back.\"\n    }, {\n      name: \"Pelvic Tilt\",\n      description: \"Lie on your back with your knees bent. Tighten your stomach and buttock muscles to press your lower back against the floor.\"\n    }, {\n      name: \"Bird-Dog Stretch\",\n      description: \"From a hands and knees position, extend one arm and the opposite leg straight out. Hold and then switch sides.\"\n    }, {\n      name: \"Knee-to-Chest Stretch\",\n      description: \"Lie on your back and pull one knee towards your chest, holding it with your hands. Repeat with the other leg.\"\n    }, {\n      name: \"Bridging\",\n      description: \"Lie on your back with your knees bent and lift your hips to create a straight line from your knees to shoulders.\"\n    }, {\n      name: \"Back Extension\",\n      description: \"Lie face down and press your palms against the floor to lift your upper body while keeping your hips grounded.\"\n    }, {\n      name: \"Superman Exercise\",\n      description: \"Lie face down and simultaneously raise your arms, legs, and chest off the floor, holding this position before releasing.\"\n    }, {\n      name: \"Partial Crunches\",\n      description: \"Lie on your back with knees bent and feet flat. Tighten your stomach muscles and lift your head and shoulders off the floor.\"\n    }, {\n      name: \"Wall Sits\",\n      description: \"Slide down a wall until your knees are at a 90-degree angle while keeping your back flat against the wall.\"\n    }]\n  };\n  const [userData, setUserData] = useState({\n    painIntensity: '',\n    painLocation: ''\n  });\n  const [finishedTherapies, setFinishedTherapies] = useState(0);\n  const [therapyHistory, setTherapyHistory] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n  const [lastSessionDate, setLastSessionDate] = useState(null);\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    const username = localStorage.getItem('username');\n    const fetchUserData = async () => {\n      try {\n        const response = await axios.get(`${baseURL}/user/${username}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setUserData(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n        setError('Failed to fetch user data. Please try again.');\n        setLoading(false);\n      }\n    };\n    fetchUserData();\n  }, [token, baseURL]);\n  useEffect(() => {\n    const fetchTherapyHistory = async () => {\n      try {\n        const response = await axios.get(`${baseURL}/history`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setTherapyHistory(response.data);\n      } catch (error) {\n        console.error('Error fetching therapy history:', error);\n      }\n    };\n    fetchTherapyHistory();\n  }, [token, baseURL]);\n  const selectedExercises = useMemo(() => {\n    const painType = userData.painLocation + 'Pain';\n    const availableExercises = exercises[painType] || [];\n    let selected = [];\n    while (selected.length < 3 && availableExercises.length > selected.length) {\n      const randomIndex = Math.floor(Math.random() * availableExercises.length);\n      const exercise = availableExercises[randomIndex];\n      if (!selected.some(e => e.name === exercise.name)) {\n        selected.push(exercise);\n      }\n    }\n    return selected;\n  }, [userData.painLocation]);\n  const handleViewHistory = () => {\n    navigate('/history', {\n      state: {\n        history: therapyHistory\n      }\n    });\n  };\n  const handleDoneClick = async () => {\n    try {\n      const response = await axios.post(`${baseURL}/history`, {\n        date: new Date().toISOString(),\n        exercises: selectedExercises.map(ex => ({\n          name: ex.name,\n          description: ex.description\n        }))\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 201) {\n        console.log('Therapy history saved:', response.data);\n        setFinishedTherapies(finishedTherapies + 1);\n      } else {\n        throw new Error('Failed to save therapy history');\n      }\n    } catch (error) {\n      console.error('Error saving therapy history:', error);\n      setError('Failed to save therapy session. Please check console for more details.');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 16\n    }, this);\n  }\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  const isButtonDisabled = lastSessionDate && lastSessionDate >= today;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Today's Therapy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Date: \", new Date().toLocaleDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Pain Intensity: \", userData.painIntensity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Pain Location: \", userData.painLocation]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Finished Therapies: \", finishedTherapies]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercises\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"name\",\n        children: \"Recommended Exercises\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"each_exercise\",\n        children: selectedExercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: exercise.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this), \": \", exercise.description]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: handleDoneClick,\n      disabled: isButtonDisabled,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"view_ button\",\n      onClick: handleViewHistory,\n      children: \"View History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"2R6W4I3ZnMOMqwc8l5tRwhxRpR4=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","axios","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","exercises","kneePain","name","description","shoulderPain","backPain","userData","setUserData","painIntensity","painLocation","finishedTherapies","setFinishedTherapies","therapyHistory","setTherapyHistory","error","setError","loading","setLoading","navigate","baseURL","process","env","REACT_APP_API_URL","lastSessionDate","setLastSessionDate","token","localStorage","getItem","username","fetchUserData","response","get","headers","Authorization","data","console","fetchTherapyHistory","selectedExercises","painType","availableExercises","selected","length","randomIndex","Math","floor","random","exercise","some","e","push","handleViewHistory","state","history","handleDoneClick","post","date","Date","toISOString","map","ex","status","log","Error","children","fileName","_jsxFileName","lineNumber","columnNumber","today","setHours","isButtonDisabled","className","toLocaleDateString","index","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/v450/myphysiotherapist/src/Frontend/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst Dashboard = () => {\n    const exercises = {\n        kneePain: [\n            { name: \"Straight Leg Raise\", description: \"Lie on your back, one leg bent and the other straight. Raise the straight leg slightly off the floor. Hold and then lower it back down.\" },\n            { name: \"Quad Set\", description: \"Sit with your leg straight and tighten the muscle on the top of your thigh. Hold the contraction before releasing.\" },\n            { name: \"Hamstring Curl\", description: \"Stand and bend one knee as if trying to kick your buttock with the heel. Hold and then return to the starting position.\" },\n            { name: \"Prone Straight Leg Raises\", description: \"Lie on your stomach with your legs straight. Lift one leg off the ground, hold it, and then lower it back down.\" },\n            { name: \"Wall Squat\", description: \"Stand with your back against a wall, feet shoulder-width apart. Slowly bend your knees, sliding down the wall, then straighten up.\" },\n            { name: \"Step-Ups\", description: \"Step up on a platform or stair, then step down with the same leg. Alternate your leading leg with each set.\" },\n            { name: \"Calf Raises\", description: \"Stand upright, then push through the balls of your feet to raise your heel until you are standing on your toes. Lower slowly back to the start.\" },\n            { name: \"Leg Press\", description: \"Sit on a leg press machine with your feet on the platform. Extend your legs until they are straight, then return to the starting position.\" },\n            { name: \"Walking Lunge\", description: \"Step forward with one leg, lowering your hips until both knees are bent at a 90-degree angle. Push up and step forward with your other leg.\" },\n            { name: \"Bicycle Exercise\", description: \"Lie on your back and mimic a bicycle pedaling motion with your legs in the air, engaging your abdominal muscles.\" }\n        ],\n        shoulderPain: [\n            { name: \"Pendulum Stretch\", description: \"Lean over slightly and let your affected arm hang down. Swing the arm gently in circles clockwise and counterclockwise.\" },\n            { name: \"Towel Stretch\", description: \"Hold a towel behind your back with one hand, and grab the opposite end with your other hand. Pull the towel up and down gently.\" },\n            { name: \"Outward Rotation\", description: \"Hold a band between your hands with your elbows at your side, rotated outward against the band’s resistance.\" },\n            { name: \"Inward Rotation\", description: \"Hold a band between your hands with your elbows at your side, rotate inward against the band’s resistance.\" },\n            { name: \"Reverse Fly\", description: \"Bend forward slightly and, with a dumbbell in each hand, lift your arms to the side until they are parallel with the ground.\" },\n            { name: \"Shoulder Blade Squeeze\", description: \"Sit or stand with your arms at your sides. Squeeze your shoulder blades together and hold for a few seconds before releasing.\" },\n            { name: \"Standing Wall Stretch\", description: \"Face a wall and stretch your arms up to touch the wall, holding the position to stretch your shoulders.\" },\n            { name: \"Diagonal Extension\", description: \"Hold a band with both hands, stretch your arms out and up in a diagonal pattern, and then return to the starting position.\" },\n            { name: \"Seated Rotation\", description: \"Sit with your arm at a right angle and rotated outward, hold for a few seconds, and then switch arms.\" },\n            { name: \"Arm Circles\", description: \"Extend your arms parallel to the ground and make small circles, gradually increasing the diameter of the circles.\" }\n        ],\n        backPain: [\n            { name: \"Cat-Cow Stretch\", description: \"Get on your hands and knees. Arch your back towards the ceiling and hold, then dip it towards the floor and hold.\" },\n            { name: \"Child’s Pose\", description: \"Sit back on your heels with your hands stretched forward on the floor. Hold this position to stretch your back.\" },\n            { name: \"Pelvic Tilt\", description: \"Lie on your back with your knees bent. Tighten your stomach and buttock muscles to press your lower back against the floor.\" },\n            { name: \"Bird-Dog Stretch\", description: \"From a hands and knees position, extend one arm and the opposite leg straight out. Hold and then switch sides.\" },\n            { name: \"Knee-to-Chest Stretch\", description: \"Lie on your back and pull one knee towards your chest, holding it with your hands. Repeat with the other leg.\" },\n            { name: \"Bridging\", description: \"Lie on your back with your knees bent and lift your hips to create a straight line from your knees to shoulders.\" },\n            { name: \"Back Extension\", description: \"Lie face down and press your palms against the floor to lift your upper body while keeping your hips grounded.\" },\n            { name: \"Superman Exercise\", description: \"Lie face down and simultaneously raise your arms, legs, and chest off the floor, holding this position before releasing.\" },\n            { name: \"Partial Crunches\", description: \"Lie on your back with knees bent and feet flat. Tighten your stomach muscles and lift your head and shoulders off the floor.\" },\n            { name: \"Wall Sits\", description: \"Slide down a wall until your knees are at a 90-degree angle while keeping your back flat against the wall.\" }\n        ]\n    };\n\n    const [userData, setUserData] = useState({ painIntensity: '', painLocation: '' });\n    const [finishedTherapies, setFinishedTherapies] = useState(0);\n    const [therapyHistory, setTherapyHistory] = useState([]);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(true);\n    const navigate = useNavigate();\n    const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n    const [lastSessionDate, setLastSessionDate] = useState(null);\n    const token = localStorage.getItem('token');\n\n    useEffect(() => {\n        const username = localStorage.getItem('username');\n\n        const fetchUserData = async () => {\n            try {\n                const response = await axios.get(`${baseURL}/user/${username}`, {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                setUserData(response.data);\n                setLoading(false);\n            } catch (error) {\n                console.error('Error fetching user data:', error);\n                setError('Failed to fetch user data. Please try again.');\n                setLoading(false);\n            }\n        };\n\n        fetchUserData();\n    }, [token, baseURL]);\n\n    useEffect(() => {\n        const fetchTherapyHistory = async () => {\n            try {\n                const response = await axios.get(`${baseURL}/history`, {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                setTherapyHistory(response.data);\n                \n            } catch (error) {\n                console.error('Error fetching therapy history:', error);\n            }\n        };\n\n        fetchTherapyHistory();\n    }, [token, baseURL]);\n\n    const selectedExercises = useMemo(() => {\n        const painType = userData.painLocation + 'Pain';\n        const availableExercises = exercises[painType] || [];\n        let selected = [];\n        while (selected.length < 3 && availableExercises.length > selected.length) {\n            const randomIndex = Math.floor(Math.random() * availableExercises.length);\n            const exercise = availableExercises[randomIndex];\n            if (!selected.some(e => e.name === exercise.name)) {\n                selected.push(exercise);\n            }\n        }\n        return selected;\n    }, [userData.painLocation]);\n\n    const handleViewHistory = () => {\n        navigate('/history', { state: { history: therapyHistory } });\n    };\n\n    const handleDoneClick = async () => {\n        try {\n            const response = await axios.post(`${baseURL}/history`, {\n                date: new Date().toISOString(),\n                exercises: selectedExercises.map(ex => ({ name: ex.name, description: ex.description }))\n            }, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n            if (response.status === 201) {\n                console.log('Therapy history saved:', response.data);\n                setFinishedTherapies(finishedTherapies + 1);\n            } else {\n                throw new Error('Failed to save therapy history');\n            }\n        } catch (error) {\n            console.error('Error saving therapy history:', error);\n            setError('Failed to save therapy session. Please check console for more details.');\n        }\n    };\n\n    if (loading) {\n        return <p>Loading...</p>;\n    }\n\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const isButtonDisabled = lastSessionDate && lastSessionDate >= today;\n\n    return (\n        <div className='app'>\n            <h1>Today's Therapy</h1>\n            <p>Date: {new Date().toLocaleDateString()}</p>\n            {error && <p>{error}</p>}\n            <p>Pain Intensity: {userData.painIntensity}</p>\n            <p>Pain Location: {userData.painLocation}</p>\n            <p>Finished Therapies: {finishedTherapies}</p>\n            <div className='exercises'>\n                <h2 className='name'>Recommended Exercises</h2>\n                <ul className='each_exercise'>\n                    {selectedExercises.map((exercise, index) => (\n                        <li key={index}>\n                            <strong>{exercise.name}</strong>: {exercise.description}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n            \n            <button className='button' onClick={handleDoneClick} disabled={isButtonDisabled}>Done</button>\n            <button className='view_ button' onClick={handleViewHistory}>View History</button>\n        </div>\n    );\n};\n\nexport default Dashboard;\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}