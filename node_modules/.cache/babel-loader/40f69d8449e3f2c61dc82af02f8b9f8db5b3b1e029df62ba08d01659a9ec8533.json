{"ast":null,"code":"var _jsxFileName = \"/Users/v450/myphysiotherapist/src/components/LogIn.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      const response = await axios.post(`${baseURL}/login`, {\n        username,\n        password\n      });\n\n      // Check if the response has the expected data\n      console.log('Server response:', response.data);\n      if (response.data && response.data.token && response.data.user) {\n        const {\n          token,\n          user\n        } = response.data;\n\n        // Store both the token and the user data in localStorage\n        localStorage.setItem('token', token);\n        localStorage.setItem('userId', user.id);\n        localStorage.setItem('username', user.username);\n        localStorage.setItem('painIntensity', user.painIntensity);\n        localStorage.setItem('painLocation', user.painLocation);\n        alert('Login Successful');\n        navigate('/dashboard'); // Redirect to the dashboard page using navigate\n      } else {\n        alert('Login Failed: Incorrect server response format');\n        console.error('Login Failed: Incorrect server response format', response.data);\n      }\n    } catch (error) {\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.error(\"Response error:\", error.response.data);\n        alert('Login Failed: ' + error.response.data.message);\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.error(\"Request error:\", error.request);\n        alert('Login Failed: No response from the server');\n      } else {\n        // Something happened in setting up the request that triggered an error\n        console.error(\"Error:\", error.message);\n        alert('Login Failed: ' + error.message);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Username\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"IIPwWddbiEHHD7aoL5eQeOR7fTk=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","navigate","handleSubmit","event","preventDefault","baseURL","process","env","REACT_APP_API_URL","response","post","console","log","data","token","user","localStorage","setItem","id","painIntensity","painLocation","alert","error","message","request","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/v450/myphysiotherapist/src/components/LogIn.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Login() {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate();\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n            const response = await axios.post(`${baseURL}/login`, {\n                username,\n                password\n            });\n\n            // Check if the response has the expected data\n            console.log('Server response:', response.data);\n            if (response.data && response.data.token && response.data.user) {\n                const { token, user } = response.data;\n\n                // Store both the token and the user data in localStorage\n                localStorage.setItem('token', token);\n                localStorage.setItem('userId', user.id);\n                localStorage.setItem('username', user.username);\n                localStorage.setItem('painIntensity', user.painIntensity);\n                localStorage.setItem('painLocation', user.painLocation);\n\n                alert('Login Successful');\n                navigate('/dashboard'); // Redirect to the dashboard page using navigate\n            } else {\n                alert('Login Failed: Incorrect server response format');\n                console.error('Login Failed: Incorrect server response format', response.data);\n            }\n        } catch (error) {\n            if (error.response) {\n                // The request was made and the server responded with a status code\n                // that falls out of the range of 2xx\n                console.error(\"Response error:\", error.response.data);\n                alert('Login Failed: ' + error.response.data.message);\n            } else if (error.request) {\n                // The request was made but no response was received\n                console.error(\"Request error:\", error.request);\n                alert('Login Failed: No response from the server');\n            } else {\n                // Something happened in setting up the request that triggered an error\n                console.error(\"Error:\", error.message);\n                alert('Login Failed: ' + error.message);\n            }\n        }\n    };\n\n    return (\n        <div>\n            <h1>Log in</h1>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    placeholder=\"Username\"\n                    required\n                />\n                <input\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    placeholder=\"Password\"\n                    required\n                />\n                <button type=\"submit\">Login</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Login;\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}