{"ast":null,"code":"var _jsxFileName = \"/Users/v450/myphysiotherapist/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMe } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const exercises = {\n    kneePain: [{\n      name: \"Straight Leg Raise\",\n      description: \"Lie on your back, one leg bent and the other straight. Raise the straight leg slightly off the floor. Hold and then lower it back down.\"\n    }, {\n      name: \"Quad Set\",\n      description: \"Sit with your leg straight and tighten the muscle on the top of your thigh. Hold the contraction before releasing.\"\n    }, {\n      name: \"Hamstring Curl\",\n      description: \"Stand and bend one knee as if trying to kick your buttock with the heel. Hold and then return to the starting position.\"\n    }, {\n      name: \"Prone Straight Leg Raises\",\n      description: \"Lie on your stomach with your legs straight. Lift one leg off the ground, hold it, and then lower it back down.\"\n    }, {\n      name: \"Wall Squat\",\n      description: \"Stand with your back against a wall, feet shoulder-width apart. Slowly bend your knees, sliding down the wall, then straighten up.\"\n    }, {\n      name: \"Step-Ups\",\n      description: \"Step up on a platform or stair, then step down with the same leg. Alternate your leading leg with each set.\"\n    }, {\n      name: \"Calf Raises\",\n      description: \"Stand upright, then push through the balls of your feet to raise your heel until you are standing on your toes. Lower slowly back to the start.\"\n    }, {\n      name: \"Leg Press\",\n      description: \"Sit on a leg press machine with your feet on the platform. Extend your legs until they are straight, then return to the starting position.\"\n    }, {\n      name: \"Walking Lunge\",\n      description: \"Step forward with one leg, lowering your hips until both knees are bent at a 90-degree angle. Push up and step forward with your other leg.\"\n    }, {\n      name: \"Bicycle Exercise\",\n      description: \"Lie on your back and mimic a bicycle pedaling motion with your legs in the air, engaging your abdominal muscles.\"\n    }],\n    shoulderPain: [{\n      name: \"Pendulum Stretch\",\n      description: \"Lean over slightly and let your affected arm hang down. Swing the arm gently in circles clockwise and counterclockwise.\"\n    }, {\n      name: \"Towel Stretch\",\n      description: \"Hold a towel behind your back with one hand, and grab the opposite end with your other hand. Pull the towel up and down gently.\"\n    }, {\n      name: \"Outward Rotation\",\n      description: \"Hold a band between your hands with your elbows at your side, rotated outward against the band’s resistance.\"\n    }, {\n      name: \"Inward Rotation\",\n      description: \"Hold a band between your hands with your elbows at your side, rotate inward against the band’s resistance.\"\n    }, {\n      name: \"Reverse Fly\",\n      description: \"Bend forward slightly and, with a dumbbell in each hand, lift your arms to the side until they are parallel with the ground.\"\n    }, {\n      name: \"Shoulder Blade Squeeze\",\n      description: \"Sit or stand with your arms at your sides. Squeeze your shoulder blades together and hold for a few seconds before releasing.\"\n    }, {\n      name: \"Standing Wall Stretch\",\n      description: \"Face a wall and stretch your arms up to touch the wall, holding the position to stretch your shoulders.\"\n    }, {\n      name: \"Diagonal Extension\",\n      description: \"Hold a band with both hands, stretch your arms out and up in a diagonal pattern, and then return to the starting position.\"\n    }, {\n      name: \"Seated Rotation\",\n      description: \"Sit with your arm at a right angle and rotated outward, hold for a few seconds, and then switch arms.\"\n    }, {\n      name: \"Arm Circles\",\n      description: \"Extend your arms parallel to the ground and make small circles, gradually increasing the diameter of the circles.\"\n    }],\n    backPain: [{\n      name: \"Cat-Cow Stretch\",\n      description: \"Get on your hands and knees. Arch your back towards the ceiling and hold, then dip it towards the floor and hold.\"\n    }, {\n      name: \"Child’s Pose\",\n      description: \"Sit back on your heels with your hands stretched forward on the floor. Hold this position to stretch your back.\"\n    }, {\n      name: \"Pelvic Tilt\",\n      description: \"Lie on your back with your knees bent. Tighten your stomach and buttock muscles to press your lower back against the floor.\"\n    }, {\n      name: \"Bird-Dog Stretch\",\n      description: \"From a hands and knees position, extend one arm and the opposite leg straight out. Hold and then switch sides.\"\n    }, {\n      name: \"Knee-to-Chest Stretch\",\n      description: \"Lie on your back and pull one knee towards your chest, holding it with your hands. Repeat with the other leg.\"\n    }, {\n      name: \"Bridging\",\n      description: \"Lie on your back with your knees bent and lift your hips to create a straight line from your knees to shoulders.\"\n    }, {\n      name: \"Back Extension\",\n      description: \"Lie face down and press your palms against the floor to lift your upper body while keeping your hips grounded.\"\n    }, {\n      name: \"Superman Exercise\",\n      description: \"Lie face down and simultaneously raise your arms, legs, and chest off the floor, holding this position before releasing.\"\n    }, {\n      name: \"Partial Crunches\",\n      description: \"Lie on your back with knees bent and feet flat. Tighten your stomach muscles and lift your head and shoulders off the floor.\"\n    }, {\n      name: \"Wall Sits\",\n      description: \"Slide down a wall until your knees are at a 90-degree angle while keeping your back flat against the wall.\"\n    }]\n  };\n  const [userData, setUserData] = useState({\n    painIntensity: '',\n    painLocation: ''\n  });\n  const [selectedExercises, setSelectedExercises] = useState([]);\n  const [finishedTherapies, setFinishedTherapies] = useState(0);\n  const [therapyHistory, setTherapyHistory] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n  useEffect(() => {\n    const username = localStorage.getItem('username');\n    const token = localStorage.getItem('token');\n    const fetchUserData = async () => {\n      try {\n        const response = await axios.get(`${baseURL}/user/${username}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setUserData(response.data);\n        setSelectedExercises(getRandomExercises(response.data.painLocation));\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n        setError('Failed to fetch user data. Please try again.');\n        setLoading(false);\n      }\n    };\n    fetchUserData();\n  }, []);\n  useEffect(() => {\n    const fetchTherapyHistory = async () => {\n      try {\n        const response = await axios.get(`${baseURL}/therapy-history`);\n        setTherapyHistory(response.data);\n      } catch (error) {\n        console.error('Error fetching therapy history:', error);\n      }\n    };\n    fetchTherapyHistory();\n  }, []);\n  const getRandomExercises = useMemo(() => {\n    const painType = userData.painLocation + 'Pain';\n    const availableExercises = exercises[painType];\n    let selected = [];\n    while (selected.length < 3) {\n      const randomIndex = Math.floor(Math.random() * availableExercises.length);\n      const exercise = availableExercises[randomIndex];\n      if (!selected.some(e => e.name === exercise.name)) {\n        selected.push(exercise);\n      }\n    }\n    return selected;\n  }, [userData.painLocation]);\n  const handleViewHistory = () => {\n    navigate('/history', {\n      state: {\n        history: therapyHistory\n      }\n    });\n  };\n  const handleDoneClick = async () => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.post(`${baseURL}/therapy-history`, {\n        date: new Date().toISOString(),\n        exercises: selectedExercises.map(ex => ({\n          name: ex.name,\n          description: ex.description\n        }))\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 201) {\n        console.log('Therapy history saved:', response.data);\n        setFinishedTherapies(finishedTherapies + 1);\n      } else {\n        throw new Error('Failed to save therapy history');\n      }\n    } catch (error) {\n      console.error('Error saving therapy history:', error);\n      setError('Failed to save therapy session. Please check console for more details.');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Today's Therapy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Date: \", new Date().toLocaleDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Pain Intensity: \", userData.painIntensity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Pain Location: \", userData.painLocation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Finished Therapies: \", finishedTherapies]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recommended Exercises\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        \"aria-label\": \"Recommended Exercises\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: selectedExercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: exercise.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this), \": \", exercise.description]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDoneClick,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleViewHistory,\n        children: \"View History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"QESCJ4TZ+KV/wiNlP5i+uY1b3ns=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useMe","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","exercises","kneePain","name","description","shoulderPain","backPain","userData","setUserData","painIntensity","painLocation","selectedExercises","setSelectedExercises","finishedTherapies","setFinishedTherapies","therapyHistory","setTherapyHistory","error","setError","loading","setLoading","navigate","baseURL","process","env","REACT_APP_API_URL","username","localStorage","getItem","token","fetchUserData","response","get","headers","Authorization","data","getRandomExercises","console","fetchTherapyHistory","useMemo","painType","availableExercises","selected","length","randomIndex","Math","floor","random","exercise","some","e","push","handleViewHistory","state","history","handleDoneClick","post","date","Date","toISOString","map","ex","status","log","Error","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleDateString","index","onClick","_c","$RefreshReg$"],"sources":["/Users/v450/myphysiotherapist/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState, useMe } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst Dashboard = () => {\n    const exercises = {\n        kneePain: [\n            { name: \"Straight Leg Raise\", description: \"Lie on your back, one leg bent and the other straight. Raise the straight leg slightly off the floor. Hold and then lower it back down.\" },\n            { name: \"Quad Set\", description: \"Sit with your leg straight and tighten the muscle on the top of your thigh. Hold the contraction before releasing.\" },\n            { name: \"Hamstring Curl\", description: \"Stand and bend one knee as if trying to kick your buttock with the heel. Hold and then return to the starting position.\" },\n            { name: \"Prone Straight Leg Raises\", description: \"Lie on your stomach with your legs straight. Lift one leg off the ground, hold it, and then lower it back down.\" },\n            { name: \"Wall Squat\", description: \"Stand with your back against a wall, feet shoulder-width apart. Slowly bend your knees, sliding down the wall, then straighten up.\" },\n            { name: \"Step-Ups\", description: \"Step up on a platform or stair, then step down with the same leg. Alternate your leading leg with each set.\" },\n            { name: \"Calf Raises\", description: \"Stand upright, then push through the balls of your feet to raise your heel until you are standing on your toes. Lower slowly back to the start.\" },\n            { name: \"Leg Press\", description: \"Sit on a leg press machine with your feet on the platform. Extend your legs until they are straight, then return to the starting position.\" },\n            { name: \"Walking Lunge\", description: \"Step forward with one leg, lowering your hips until both knees are bent at a 90-degree angle. Push up and step forward with your other leg.\" },\n            { name: \"Bicycle Exercise\", description: \"Lie on your back and mimic a bicycle pedaling motion with your legs in the air, engaging your abdominal muscles.\" }\n        ],\n        shoulderPain: [\n            { name: \"Pendulum Stretch\", description: \"Lean over slightly and let your affected arm hang down. Swing the arm gently in circles clockwise and counterclockwise.\" },\n            { name: \"Towel Stretch\", description: \"Hold a towel behind your back with one hand, and grab the opposite end with your other hand. Pull the towel up and down gently.\" },\n            { name: \"Outward Rotation\", description: \"Hold a band between your hands with your elbows at your side, rotated outward against the band’s resistance.\" },\n            { name: \"Inward Rotation\", description: \"Hold a band between your hands with your elbows at your side, rotate inward against the band’s resistance.\" },\n            { name: \"Reverse Fly\", description: \"Bend forward slightly and, with a dumbbell in each hand, lift your arms to the side until they are parallel with the ground.\" },\n            { name: \"Shoulder Blade Squeeze\", description: \"Sit or stand with your arms at your sides. Squeeze your shoulder blades together and hold for a few seconds before releasing.\" },\n            { name: \"Standing Wall Stretch\", description: \"Face a wall and stretch your arms up to touch the wall, holding the position to stretch your shoulders.\" },\n            { name: \"Diagonal Extension\", description: \"Hold a band with both hands, stretch your arms out and up in a diagonal pattern, and then return to the starting position.\" },\n            { name: \"Seated Rotation\", description: \"Sit with your arm at a right angle and rotated outward, hold for a few seconds, and then switch arms.\" },\n            { name: \"Arm Circles\", description: \"Extend your arms parallel to the ground and make small circles, gradually increasing the diameter of the circles.\" }\n        ],\n        backPain: [\n            { name: \"Cat-Cow Stretch\", description: \"Get on your hands and knees. Arch your back towards the ceiling and hold, then dip it towards the floor and hold.\" },\n            { name: \"Child’s Pose\", description: \"Sit back on your heels with your hands stretched forward on the floor. Hold this position to stretch your back.\" },\n            { name: \"Pelvic Tilt\", description: \"Lie on your back with your knees bent. Tighten your stomach and buttock muscles to press your lower back against the floor.\" },\n            { name: \"Bird-Dog Stretch\", description: \"From a hands and knees position, extend one arm and the opposite leg straight out. Hold and then switch sides.\" },\n            { name: \"Knee-to-Chest Stretch\", description: \"Lie on your back and pull one knee towards your chest, holding it with your hands. Repeat with the other leg.\" },\n            { name: \"Bridging\", description: \"Lie on your back with your knees bent and lift your hips to create a straight line from your knees to shoulders.\" },\n            { name: \"Back Extension\", description: \"Lie face down and press your palms against the floor to lift your upper body while keeping your hips grounded.\" },\n            { name: \"Superman Exercise\", description: \"Lie face down and simultaneously raise your arms, legs, and chest off the floor, holding this position before releasing.\" },\n            { name: \"Partial Crunches\", description: \"Lie on your back with knees bent and feet flat. Tighten your stomach muscles and lift your head and shoulders off the floor.\" },\n            { name: \"Wall Sits\", description: \"Slide down a wall until your knees are at a 90-degree angle while keeping your back flat against the wall.\" }\n        ]\n    };\n\n    const [userData, setUserData] = useState({ painIntensity: '', painLocation: '' });\n    const [selectedExercises, setSelectedExercises] = useState([]);\n    const [finishedTherapies, setFinishedTherapies] = useState(0);\n    const [therapyHistory, setTherapyHistory] = useState([]);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(true);\n    const navigate = useNavigate();\n    const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n    useEffect(() => {\n        const username = localStorage.getItem('username');\n        const token = localStorage.getItem('token');\n\n        const fetchUserData = async () => {\n            try {\n                const response = await axios.get(`${baseURL}/user/${username}`, {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                setUserData(response.data);\n                setSelectedExercises(getRandomExercises(response.data.painLocation));\n                setLoading(false);\n            } catch (error) {\n                console.error('Error fetching user data:', error);\n                setError('Failed to fetch user data. Please try again.');\n                setLoading(false);\n            }\n        };\n\n        fetchUserData();\n    }, []);\n\n    useEffect(() => {\n        const fetchTherapyHistory = async () => {\n            try {\n                const response = await axios.get(`${baseURL}/therapy-history`);\n                setTherapyHistory(response.data);\n            } catch (error) {\n                console.error('Error fetching therapy history:', error);\n            }\n        };\n\n        fetchTherapyHistory();\n    }, []);\n\n    const getRandomExercises = useMemo(() => {\n        const painType = userData.painLocation + 'Pain';\n        const availableExercises = exercises[painType];\n        let selected = [];\n        while (selected.length < 3) {\n            const randomIndex = Math.floor(Math.random() * availableExercises.length);\n            const exercise = availableExercises[randomIndex];\n            if (!selected.some(e => e.name === exercise.name)) {\n                selected.push(exercise);\n            }\n        }\n        return selected;\n    }, [userData.painLocation]);\n\n    const handleViewHistory = () => {\n        navigate('/history', { state: { history: therapyHistory } });\n    };\n\n    const handleDoneClick = async () => {\n        const token = localStorage.getItem('token');\n        try {\n            const response = await axios.post(`${baseURL}/therapy-history`, {\n                date: new Date().toISOString(),\n                exercises: selectedExercises.map(ex => ({ name: ex.name, description: ex.description }))\n            }, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n            if (response.status === 201) {\n                console.log('Therapy history saved:', response.data);\n                setFinishedTherapies(finishedTherapies + 1);\n            } else {\n                throw new Error('Failed to save therapy history');\n            }\n        } catch (error) {\n            console.error('Error saving therapy history:', error);\n            setError('Failed to save therapy session. Please check console for more details.');\n        }\n    };\n\n    if (loading) {\n        return <p>Loading...</p>;\n    }\n\n    return (\n        <div>\n            <h1>Today's Therapy</h1>\n            <p>Date: {new Date().toLocaleDateString()}</p>\n            {error && <p>{error}</p>}\n            <>\n                <p>Pain Intensity: {userData.painIntensity}</p>\n                <p>Pain Location: {userData.painLocation}</p>\n                <p>Finished Therapies: {finishedTherapies}</p>\n                <h2>Recommended Exercises</h2>\n                <section aria-label=\"Recommended Exercises\">\n                    <ul>\n                        {selectedExercises.map((exercise, index) => (\n                            <li key={index}>\n                                <strong>{exercise.name}</strong>: {exercise.description}\n                            </li>\n                        ))}\n                    </ul>\n                </section>\n                <button onClick={handleDoneClick}>Done</button>\n                <button onClick={handleViewHistory}>View History</button>\n            </>\n        </div>\n    );\n};\n\nexport default Dashboard;\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}